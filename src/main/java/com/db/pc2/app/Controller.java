package com.db.pc2.app;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController // This means that this class is a Controller
@RequestMapping(path = "/cursos")
public class Controller {

    @Autowired // This means to get the bean called userRepository
               // Which is auto-generated by Spring, we will use it to handle the data
    private repository userRepository;

    @Autowired
    private JdbcTemplate jdbcTemplate;

    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser(@RequestParam String nombre, @RequestParam Integer creditoss) {
        Cursos n = new Cursos();
        n.setNombre(nombre);
        n.setCreditos(creditoss);
        userRepository.save(n);
        return "Saved";
    }

    @DeleteMapping(path = "/del")
    public @ResponseBody String delUser(@RequestParam Integer id) {
        Cursos n = new Cursos();
        n.setId(id);
        userRepository.delete(n);
        return "Deleted";
    }

    @PutMapping(path = "/edit")
    public @ResponseBody String editUser(@RequestParam Integer id, @RequestParam String nombre,
            @RequestParam Integer creditos) {
        Cursos n = new Cursos();
        n.setId(id);
        n.setNombre(nombre);
        n.setCreditos(creditos);
        userRepository.save(n);
        return "Updated";
    }

    @GetMapping(path = "/all")
    public @ResponseBody Iterable<Cursos> getAllUsers() {
        return userRepository.findAll();
    }

    @GetMapping(path = "/get/{id}")
    public @ResponseBody Cursos getOneUser(@PathVariable Integer id) {
        return userRepository.findById(id).orElse(null);
    }

}
